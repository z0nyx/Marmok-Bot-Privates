import disnake
from disnake.ext import commands
from disnake import ui

from core.enums import *

class PrivateRoomButtons(ui.View):
    def __init__(self, cog):
        super().__init__(timeout=None)
        self.cog = cog
    
    @ui.button(style=disnake.ButtonStyle.gray, custom_id="change_name", emoji="<:pen:0>")
    async def change_name(self, button: ui.Button, inter: disnake.MessageInteraction):
        if not await self.cog.is_private_room_owner(inter):
            return
        
        await inter.response.send_modal(
            title="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–Ω–∞—Ç—ã",
            custom_id="change_name_modal",
            components=[
                ui.TextInput(
                    label="–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ",
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã",
                    custom_id="new_name",
                    style=disnake.TextInputStyle.short,
                    max_length=100
                )
            ]
        )

    @ui.button(style=disnake.ButtonStyle.gray, custom_id="set_limit", emoji="<:user:0>")
    async def set_limit(self, button: ui.Button, inter: disnake.MessageInteraction):
        if not await self.cog.is_private_room_owner(inter):
            return
        
        await inter.response.send_modal(
            title="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–∏–º–∏—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
            custom_id="set_limit_modal",
            components=[
                ui.TextInput(
                    label="–õ–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (0-99)",
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 99",
                    custom_id="user_limit",
                    style=disnake.TextInputStyle.short,
                    max_length=2
                )
            ]
        )
    @ui.button(style=disnake.ButtonStyle.gray, custom_id="toggle_access", emoji="<:lock:0>")
    async def toggle_access(self, button: ui.Button, inter: disnake.MessageInteraction):
        if not await self.cog.is_private_room_owner(inter):
            return
        
        channel = inter.user.voice.channel
        current_perms = channel.overwrites_for(inter.guild.default_role)
        

        if current_perms.connect is None or current_perms.connect:
            new_perms = disnake.PermissionOverwrite(connect=False)
            message = f'{inter.author.mention}, –í—ã **–∑–∞–∫—Ä—ã–ª–∏** –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É –¥–ª—è –≤—Å–µ—Ö!'
        else:
            new_perms = disnake.PermissionOverwrite(connect=None)  # None —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
            message = f'{inter.author.mention}, –í—ã **–æ—Ç–∫—Ä—ã–ª–∏** –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É –¥–ª—è –≤—Å–µ—Ö!'
        
        await channel.set_permissions(inter.guild.default_role, overwrite=new_perms)
        
        emb = disnake.Embed(
            title='–ó–∞–∫—Ä—ã—Ç—å/–û—Ç–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –≤ –∫–æ–º–Ω–∞—Ç—É',
            description=message,
            colour=0x2f3136
        )
        emb.set_thumbnail(url=inter.author.display_avatar.url)
        await inter.response.send_message(embed=emb, ephemeral=True)

    @ui.button(style=disnake.ButtonStyle.gray, custom_id="manage_access", emoji="<:access:1353438463281725553>")
    async def manage_access(self, button: ui.Button, inter: disnake.MessageInteraction):
        if not await self.cog.is_private_room_owner(inter):  # 
            return
        
        emb = disnake.Embed(
            title='–í—ã–¥–∞—Ç—å/–ó–∞–±—Ä–∞—Ç—å –¥–æ—Å—Ç—É–ø –≤ –∫–æ–º–Ω–∞—Ç–µ',
            description=f'{inter.author.mention}, **–≤—ã–±–µ—Ä–∏—Ç–µ** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ **–≤—ã–¥–∞—Ç—å/–∑–∞–±—Ä–∞—Ç—å** –ø—Ä–∞–≤–æ –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–Ω–∞—Ç–µ!',
            colour=0x2f3136
            )
        emb.set_thumbnail(url=inter.author.display_avatar.url)
        components= disnake.ui.UserSelect(
                    placeholder="üîò–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                    custom_id="select_user_access"
                )

        await inter.send(embed=emb, components=[components], ephemeral=True)

    @ui.button(style=disnake.ButtonStyle.gray, custom_id="kick_user", emoji="<:kick:0>")
    async def kick_user(self, button: ui.Button, inter: disnake.MessageInteraction):
        if not await self.cog.is_private_room_owner(inter): 
            return
        
        emb = disnake.Embed(
                title='–í—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–º–Ω–∞—Ç—ã',
                description=f'{inter.author.mention}, **–≤—ã–±–µ—Ä–∏—Ç–µ** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ **–≤—ã–≥–Ω–∞—Ç—å** –∏–∑ –∫–æ–º–Ω–∞—Ç—ã!',
                colour=0x2f3136
        )
        emb.set_thumbnail(url=inter.author.display_avatar.url)
        components= disnake.ui.UserSelect(
                    custom_id="select_user_kick",
                    placeholder="üîò–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                    min_values=1,
                    max_values=1
                )
        await inter.send(embed=emb, components=[components], ephemeral=True)

    async def interaction_check(self, inter: disnake.MessageInteraction) -> bool:
        if not inter.user.voice or not inter.user.voice.channel:
            await inter.response.send_message(
                "–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", 
                ephemeral=True
            )
            return False
            
        channel = inter.user.voice.channel
        if channel.id not in self.cog.privates_info:
            await inter.response.send_message(
                "–≠—Ç–æ –Ω–µ –ø—Ä–∏–≤–∞—Ç–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞!", 
                ephemeral=True
            )
            return False
            
        if self.cog.privates_info[channel.id]['owner_id'] != inter.user.id:
            await inter.response.send_message(
                "–í—ã –Ω–µ –≤–ª–∞–¥–µ–ª–µ—Ü —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç—ã!", 
                ephemeral=True
            )
            return False
            
        return True

class PrivateRooms(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.privates_info = {} 
        self.persistent_views_added = False
        self.creation_channel_id = 0
        self.category_id = 0
        self.control_message_id = None

    async def is_private_room_owner(self, inter: disnake.Interaction):
        if not inter.user.voice or not inter.user.voice.channel:
            await inter.response.send_message(
                "–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!",
                ephemeral=True
            )
            return False
        
        channel = inter.user.voice.channel
        if channel.id not in self.privates_info:
            await inter.response.send_message(
                "–≠—Ç–æ –Ω–µ –ø—Ä–∏–≤–∞—Ç–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞!",
                ephemeral=True
            )
            return False
            
        if self.privates_info[channel.id]['owner_id'] != inter.user.id:
            await inter.response.send_message(
                "–í—ã –Ω–µ –≤–ª–∞–¥–µ–ª–µ—Ü —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç—ã!",
                ephemeral=True
            )
            return False
        
        return True

    async def send_control_panel(self, channel):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –∫–æ–º–Ω–∞—Ç–∞–º–∏"""
        embed = disnake.Embed(
            title="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π",
            description=(
                "> –ñ–º–∏ —Å–ª–µ–¥—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ—é –∫–æ–º–Ω–∞—Ç—É\n"
                " –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ —É —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª\n\n"
                f"{self.bot.get_emoji(0)} **‚Äî** `–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã`\n"
                f"{self.bot.get_emoji(0)} **‚Äî** `–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`\n"
                f"{self.bot.get_emoji(0)} **‚Äî** `–ó–∞–∫—Ä—ã—Ç—å/–û—Ç–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –≤ –∫–æ–º–Ω–∞—Ç—É`\n"
                f"{self.bot.get_emoji(0)} **‚Äî** `–ó–∞–±—Ä–∞—Ç—å/–í—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–Ω–∞—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é`\n"
                f"{self.bot.get_emoji(0)} **‚Äî** `–í—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–º–Ω–∞—Ç—ã`\n"
            ),
            colour=0x2f3136
        )
        message = await channel.send(embed=embed, view=PrivateRoomButtons(self))
        self.control_message_id = message.id
        return message
    @commands.slash_command(name="privates")
    @commands.has_any_role(0)
    async def private_control(self, inter: disnake.ApplicationCommandInteraction):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –∫–æ–º–Ω–∞—Ç–∞–º–∏"""
        if not inter.guild:
            await inter.response.send_message("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!", ephemeral=True)
            return
            
        await inter.response.defer(ephemeral=True)
        try:
            await self.send_control_panel(inter.channel)
            await inter.followup.send("–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–∫–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!", ephemeral=True)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {e}")
            await inter.followup.send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", ephemeral=True)

    @commands.Cog.listener()
    async def on_voice_state_update(self, member, before, after):
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–∫–∏ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª
        if after.channel and after.channel.id == self.creation_channel_id:
            guild = after.channel.guild
            category = guild.get_channel(self.category_id)
            
            if not category:
                return
            
            new_channel = await guild.create_voice_channel(
                name=f"–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª {member.display_name}",
                category=category,
                reason=f"–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª {member}"
            )
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–Ω–∞—Ç–µ
            self.privates_info[new_channel.id] = {
                'owner_id': member.id,
                'original_name': f"–ü—Ä–∏–≤–∞—Ç–∫–∞ {member.display_name}"
            }
            
            await new_channel.set_permissions(member, connect=True, manage_channels=True)
            await new_channel.set_permissions(guild.default_role, connect=True)
            await member.move_to(new_channel)

        if before.channel and before.channel.id in self.privates_info:
            if len(before.channel.members) == 0:
                self.privates_info.pop(before.channel.id)
                await before.channel.delete(reason="–ü—Ä–∏–≤–∞—Ç–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞ –ø—É—Å—Ç–∞")

    @commands.Cog.listener()
    async def on_modal_submit(self, inter: disnake.ModalInteraction):
        if inter.custom_id == "change_name_modal":
            new_name = inter.text_values["new_name"]
            channel = inter.user.voice.channel

            await channel.edit(name=new_name)
            if channel.id in self.privates_info:
                self.privates_info[channel.id]['original_name'] = new_name
            
            emb = disnake.Embed(
            title='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã',
            description=f'{inter.author.mention}, –í—ã **—É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏** –Ω–æ–≤–æ–µ –∏–º—è –¥–ª—è —Å–≤–æ–µ–π **–ø—Ä–∏–≤–∞—Ç–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã** {channel.mention}',
            colour=0x2f3136
            )
            emb.set_thumbnail(url=inter.author.display_avatar.url)
            await inter.send(embed=emb, ephemeral = True)
            
        elif inter.custom_id == "set_limit_modal":
            try:
                limit = int(inter.text_values["user_limit"])
                if limit < 0 or limit > 99:
                    raise ValueError
                
                channel = inter.user.voice.channel
                await channel.edit(user_limit=limit)
                emb = disnake.Embed(
                title='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                description=f'{inter.author.mention}, –õ–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ **{limit}**',
                colour=0x2f3136
            )
                await inter.send(embed=emb, ephemeral = True)
            except ValueError:
                emb = disnake.Embed(
                    title='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                    description=f'{inter.author.mention}, –í—ã —É–∫–∞–∑–∞–ª–∏ **–Ω–µ** –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –£–∫–∞–∂–∏—Ç–µ –æ—Ç 0 –¥–æ 99!',
                    colour=0x2f3136
                )
                await inter.send(embed=emb, ephemeral = True)
                return

    @commands.Cog.listener()
    async def on_dropdown(self, inter: disnake.MessageInteraction):
        try:
            if not inter.guild:
                return

            if inter.data.custom_id == "select_user_access":
                if not await self.is_private_room_owner(inter):
                    return
                
                selected_user_id = int(inter.values[0])
                selected_member = inter.guild.get_member(selected_user_id)
                
                if not selected_member:
                    await inter.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ", ephemeral=True)
                    return
                
                if selected_member.id == inter.author.id:
                    emb = disnake.Embed(
                        title='–û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º',
                        description=f'{inter.author.mention}, –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω—è—Ç—å —Å–≤–æ–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞!',
                        colour=0x2f3136
                    )
                    emb.set_thumbnail(url=inter.author.display_avatar.url)
                    return await inter.response.send_message(embed=emb, ephemeral=True)
                
                channel = inter.user.voice.channel
                current_perms = channel.overwrites_for(selected_member)
                
                if current_perms.connect is None or not current_perms.connect:
                    current_perms.connect = True
                    emb = disnake.Embed(
                        title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º',
                        description=f'{inter.author.mention}, –í—ã **–¥–∞–ª–∏** –¥–æ—Å—Ç—É–ø –≤ –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {selected_member.mention}!',
                        colour=0x2f3136
                    )
                    emb.set_thumbnail(url=inter.author.display_avatar.url)
                else:
                    current_perms.connect = False
                    emb = disnake.Embed(
                        title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º',
                        description=f'{inter.author.mention}, –í—ã **–∑–∞–±—Ä–∞–ª–∏** –¥–æ—Å—Ç—É–ø –≤ –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {selected_member.mention}!',
                        colour=0x2f3136
                    )
                    emb.set_thumbnail(url=inter.author.display_avatar.url)

                await channel.set_permissions(selected_member, overwrite=current_perms)
                await inter.response.send_message(embed=emb, ephemeral=True)
                
            elif inter.data.custom_id == "select_user_kick":
                if not await self.is_private_room_owner(inter):
                    return
                
                selected_user_id = int(inter.values[0])
                selected_member = inter.guild.get_member(selected_user_id)
                
                if not selected_member:
                    await inter.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ", ephemeral=True)
                    return
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—ã—Ç–∞–µ—Ç—Å—è –∫–∏–∫–Ω—É—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è
                if selected_member.id == inter.author.id:
                    emb = disnake.Embed(
                        title='–û—à–∏–±–∫–∞ –∫–∏–∫–∞',
                        description=f'{inter.author.mention}, –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≥–Ω–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è –∏–∑ –∫–æ–º–Ω–∞—Ç—ã!',
                        colour=0x2f3136
                    )
                    emb.set_thumbnail(url=inter.author.display_avatar.url)
                    return await inter.response.send_message(embed=emb, ephemeral=True)
                
                channel = inter.user.voice.channel
                
                if selected_member.voice and selected_member.voice.channel and selected_member.voice.channel.id == channel.id:
                    await selected_member.move_to(None)
                    emb = disnake.Embed(
                        title='–í—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–º–Ω–∞—Ç—ã',
                        description=f'{inter.author.mention}, –í—ã —É—Å–ø–µ—à–Ω–æ **–≤—ã–≥–Ω–∞–ª–∏** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {selected_member.mention} –∏–∑ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã!',
                        colour=0x2f3136
                    )
                    emb.set_thumbnail(url=inter.author.display_avatar.url)
                    await inter.response.send_message(embed=emb, ephemeral=True)
                else:
                    emb = disnake.Embed(
                        title='–í—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–º–Ω–∞—Ç—ã',
                        description=f'{inter.author.mention}, —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {selected_member.mention} **–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è** –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!',
                        colour=0x2f3136
                    )
                    emb.set_thumbnail(url=inter.author.display_avatar.url)
                    await inter.response.send_message(embed=emb, ephemeral=True)
                    
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ on_dropdown: {str(e)}")
            await inter.response.send_message(
                "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞", 
                ephemeral=True
            )

def setup(bot):
    bot.add_cog(PrivateRooms(bot))